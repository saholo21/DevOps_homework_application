pipeline {
    parameters {
        string(name: 'ip', defaultValue: '52.207.237.110', description: 'server ip to depoy (This is to parametrize the server ip when it changes on every redeploy)')

    }
    agent any
    
    stages {

        stage('Checkout') 
        {
            steps {
                checkout([$class: 'GitSCM', branches: [[name: '*/main']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/saholo21/DevOps_homework_application.git']]])
                stash includes: 'assets/dynamic/**', name: 'assets'
            }
        }

        stage('ssh-app-server-agent'){
            steps {
                sshagent(['ssh-app-server']) {
                    unstash 'assets'
                    sh 'ls'
                    sh 'cd assets; ls'
                    script {

                        try {
                            sh "ssh -tt -o StrictHostKeyChecking=no ec2-user@${params.ip} 'docker stop dynamic_app && docker rm dynamic_app'"
                        } catch (err){
                            echo "Error detected, but will continue"
                        }
                    }
                    sh "scp -o StrictHostKeyChecking=no -r assets ec2-user@${params.ip}:/home/ec2-user"
                    sh "ssh -tt -o StrictHostKeyChecking=no ec2-user@${params.ip} 'cd assets/dynamic && docker build -t dynamic_app . && docker run --name dynamic_app -p 8082:8080 -d dynamic_app'"
                }   
            }

        }

    }
}